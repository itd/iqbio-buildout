############################################
# Sources
# -------
# Specify packages under development here.
#
# See http://pypi.python.org/pypi/mr.developer for mr.developer source specifications.
# <name> = <kind> [key=value] <url> [path] [key=value]
# kind = The kind of repository. Currently supported are one of svn (>= 1.5), hg, git, cvs or fs.
#
[sources]
# Examples: to check out plonetheme.sunburst from Plone's svn, use:
# plonetheme.sunburst = svn https://svn.plone.org/svn/plone/plonetheme.sunburst/trunk
#
# To use a python package that is being developed in your src subdirectory, use:
# myproduct.betterplone = fs myproduct.betterplone
Products.Gloworm = svn https://weblion.psu.edu/svn/weblion/weblion/Products.Gloworm/trunk


[buildout]

############################################
# Test Packages
# ----------
# Specify a list of packages that you wish to include in your test suite.
# These packages will have their included tests run when you invoke
# bin/test
#
test-packages =
#    plonetheme.sunburst

debug-mode = on
deprecation-warnings = on
verbose-security = off


# we're extending buildout.cfg
extends =
    buildout.cfg

extensions +=
    mr.developer

eggs +=
    plone.reload
    Products.PrintingMailHost
    Products.Gloworm
    Products.PDBDebugMode
#   ipdb

parts +=
    test
    zopeskel
    omelette
    ipzope


zcml +=
    plone.reload


# mr.developer settings:
always-checkout = force
sources = sources
auto-checkout = *


[omelette]
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}


[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']

eggs =
    ${buildout:test-packages}

[ipzope]
# a IPython Shell for interactive use with zope running.
# you also need to copy
# https://svn.plone.org/svn/collective/dotipython/trunk/ipy_profile_zope.py
# to your $HOME/.ipython directory for the following to work.
recipe = zc.recipe.egg
eggs =
        ipython
        ${instance:eggs}
initialization =
        import sys, os
        os.environ["SOFTWARE_HOME"] = "${buildout:directory}/parts/zope2/lib/python"
#        os.environ["SOFTWARE_HOME"] = "${zope2:location}/lib/python"
        os.environ["INSTANCE_HOME"] = "${instance:location}"
        sys.argv[1:1] = "-p zope".split()
#extra-paths = ${zope2:location}/lib/python
extra-paths = ${buildout:directory}/parts/zope2/lib/python
scripts = ipython=ipzope


